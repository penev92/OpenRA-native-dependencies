name: Build Eluant

env:
  LUA_VERSION: 5.1.5

on:
  workflow_dispatch:

permissions:
  contents: read

# Do we want to have the generated NuGet packages uploaded with the artifacts as well?
# Do we care about old artifacts piling up, taking up storage space?
jobs:
  windows:
    name: Windows (x64 + x86)
    runs-on: ubuntu-22.04
    steps:
      - name: Setup Dependencies
        run: |
          mkdir -p artifacts/x64
          mkdir artifacts/x86
          sudo apt-get install mingw-w64

      - name: Compile natives
        run: |
          curl -s -L -O https://www.lua.org/ftp/lua-${LUA_VERSION}.tar.gz
          tar xf lua-${LUA_VERSION}.tar.gz
          cd lua-${LUA_VERSION}/src/
          make mingw CC=x86_64-w64-mingw32-gcc
          cp lua51.dll ../../artifacts/x64/
          make clean
          make mingw CC=i686-w64-mingw32-gcc
          cp lua51.dll ../../artifacts/x86/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Natives-Windows
          path: artifacts

  macos:
    name: macOS (x64 + arm64)
    runs-on: macos-11
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Setup Dependencies
        run: |
          mkdir -p artifacts/x86_64
          mkdir artifacts/arm64

      - name: Compile natives
        run: |
          curl -s -L -O https://www.lua.org/ftp/lua-${LUA_VERSION}.tar.gz
          tar xf lua-${LUA_VERSION}.tar.gz
          cd lua-${LUA_VERSION}/src/
          patch < ../../liblua.patch
          make liblua.5.1.dylib CC="clang -target x86_64-apple-macos10.11" LD="clang -target x86_64-apple-macos10.11"
          cp liblua.${LUA_VERSION}.dylib ../../artifacts/x86_64/lua51.dylib
          make clean
          make liblua.5.1.dylib CC="clang -target arm64-apple-macos10.15" LD="clang -target arm64-apple-macos10.15"
          cp liblua.${LUA_VERSION}.dylib ../../artifacts/arm64/lua51.dylib

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Natives-MacOS
          path: artifacts

  linux-x64:
    name: Linux (x64)
    runs-on: ubuntu-22.04
    container: centos:centos7
    steps:
      - name: Setup Dependencies
        run: |
          chown -R $(id -u):$(id -g) $PWD
          yum -y install https://repo.ius.io/ius-release-el7.rpm centos-release-scl scl-utils
          yum -y install devtoolset-8 cmake3 bzip2 patch
          mkdir -p artifacts/x64

      - name: Compile natives
        run: |
          source /opt/rh/devtoolset-8/enable
          curl -s -L -O https://www.lua.org/ftp/lua-${LUA_VERSION}.tar.gz
          curl -s -L -O https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/${GITHUB_REF_NAME}/liblua.linux.patch
          tar xf lua-${LUA_VERSION}.tar.gz
          cd lua-${LUA_VERSION}/src/
          patch < ../../liblua.linux.patch
          make liblua.so
          cp liblua.so ../../artifacts/x64/lua51.so

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Natives-Linux(x64)
          path: artifacts

  linux-arm64:
    runs-on: ubuntu-22.04
    name: Linux (arm64)
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Setup dependencies and compile natives
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu20.04
          shell: /bin/sh
          setup: |
            mkdir -p "${PWD}/artifacts/arm64"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          env: |
            LUA_VERSION: ${{ env.LUA_VERSION }}
          run: |
            apt-get update -q -y
            apt-get install -y build-essential curl
            curl -s -L -O https://www.lua.org/ftp/lua-${LUA_VERSION}.tar.gz
            tar xf lua-${LUA_VERSION}.tar.gz
            cd lua-${LUA_VERSION}/src/
            patch < ../../liblua.linux.patch
            make liblua.so
            cp liblua.so /artifacts/arm64/lua51.so

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Natives-Linux(arm64)
          path: artifacts

  
  packageNuget:
    name: Package NuGet
    runs-on: ubuntu-22.04
    needs: [windows, macos, linux-x64, linux-arm64]
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Download artifacts - Windows
        uses: actions/download-artifact@v2
        with:
          name: Natives-Windows
          path: ./native2/win

      - name: Download artifacts - MacOS
        uses: actions/download-artifact@v2
        with:
          name: Natives-MacOS
          path: ./native2/osx

      - name: Download artifacts - Linux x64
        uses: actions/download-artifact@v2
        with:
          name: Natives-Linux(x64)
          path: ./native2/linux

      - name: Download artifacts - Linux x64
        uses: actions/download-artifact@v2
        with:
          name: Natives-Linux(arm64)
          path: ./native2/linux

      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1
  
      - name: Package NuGet
        run: |
          nuget pack OpenRA-Eluant.nuspec -OutputDirectory ./nuget
  
      - name: Upload NuGet package to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: NuGet Package
          path: nuget